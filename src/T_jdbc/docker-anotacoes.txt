Obs: Aulas de 252 até 254 (devdojo maratona java) é configuração de ambiente do docker e mysql!

1o - Criar o arquivo docker-compose.yml na raiz do projeto (configurações do container);
2o - Rodar o container: docker-compose up (obs: . deve estar no diretório do arquivo anterior .yml);
        - Caso não exista a imagem ainda, ele faz o download;

3o - Verificando se o container esta running: docker ps;
4o - Verificando TODOS containers disponíveis, até mesmo os que não estão running: docker ps -a;
5o - Removendo containers pelo docker-compose: docker-compose down;
6o - Mesmo removendo containers os volumes mapeados ainda ficam, para verificar: docker volume ls;


-------------------------------------------------------------------------------
Preparando as tabelas/schemas:

CREATE DATABASE db_anime_store;
USE db_anime_store;

# Criando as tabelas que não possuem relacionamentos primeiro:
CREATE TABLE IF NOT EXISTS `db_anime_store`.`tbl_producer`(
    `id` INT NOT NULL AUTO_INCREMENT,
    `name` VARCHAR(255) NOT NULL,
    PRIMARY KEY (`id`)
);

# Criando a tabela anime que faz referência ao producer:
CREATE TABLE IF NOT EXISTS `db_anime_store`.`tbl_anime`(
    `id` INT NOT NULL AUTO_INCREMENT,
    `name` VARCHAR(255) NOT NULL,
    `episodes` INT NOT NULL,
    `producer_id` INT NOT NULL,
    PRIMARY KEY (`id`),
    INDEX `idx_producer_id` (`producer_id` ASC) VISIBLE,
        CONSTRAINT `producer_id`
        FOREIGN KEY (`producer_id`) REFERENCES `db_anime_store`.`tbl_producer`(`id`)
        ON DELETE NO ACTION
        ON UPDATE NO ACTION
);

-------------------------------------------------------------------------------
Executando comandos no container:

# Entra no container pelo shell corrente:
docker exec -it container_id bash

# Conecta com o mysql:
mysql -uroot -p





